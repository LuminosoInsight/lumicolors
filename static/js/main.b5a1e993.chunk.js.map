{"version":3,"sources":["store.js","curves.js","crayolaColors.js","generateColors.js","actions.js","Palettes.js","ColorPicker.js","ColorFinder.js","CodeOutput.js","Sidebar.js","Colors.js","App.js","serviceWorker.js","index.js"],"names":["store","createStore","colors","0","id","hex","easeInOutQuint","bezier","crayolaColors","name","rgb","generateColors","sourceColor","contrastRange","contrastDistribution","_","times","index","Curves","sourceContrast","chroma","contrast","toFixed","closestContrastValue","first","sortBy","contrastStep","Math","abs","sourceColorIndex","findIndex","o","confine","number","max","min","expandedColors","steps","sourceColorHSV","hsv","lighterHue","lighterSat","lighterLum","darkerHue","hueIncrement","darkerSat","satIncrement","darkerLum","lighterColor","darkerColor","push","lightestColor","color","colorContrast","darkestColor","colorGradient","scale","domain","swatchList","map","contrastWhite","contrastBlack","displayColor","hue","sat","lum","hsl","swatchName","orderBy","Object","objectSpread","distance","swatchNameFormatted","trim","replace","toLowerCase","each","swatch","i","concat","swatches","actions","updateColor","state","keyBy","removeColor","filter","existingColor","replaceColors","Palettes","react_default","a","createElement","className","style","display","flexDirection","this","props","key","swatchColor","Palettes_Swatch","Component","Swatch","styles","backgroundColor","ColorPicker","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","displayColorPicker","handleClick","bind","assertThisInitialized","handleClose","handleChange","setState","addOrUpdateColor","reactCSS","default","width","height","borderRadius","background","padding","boxShadow","cursor","popover","position","zIndex","cover","top","right","bottom","left","onClick","lib","onChange","React","ColorFinder","comparison","search","result","handleSubmit","e","target","value","preventDefault","submittedColor","submittedContrastWhite","submittedContrastBlack","submittedDisplayColor","allSwatches","apply","toConsumableArray","console","log","colorsWithDistance","colorDistance","closestColor","onSubmit","type","lineHeight","Modal","setAppElement","outputTypes","SASS","STYL","LESS","CSS","JS","CodeOutput","modalIsOpen","outputType","openModal","closeModal","changeOutputType","_this2","react_modal_lib_default","isOpen","content","marginRight","transform","onRequestClose","code","getSass","getStylus","getLess","getCss","getJavascript","getCode","readOnly","document","getElementById","select","execCommand","Sidebar","rowStyles","alignItems","src_ColorPicker","flex","removeColumn","src_ColorFinder","src_CodeOutput","href","getQueryString","queryString","stringify","Colors","queryColors","params","parse","location","colorQueries","Array","isArray","getColorParams","colorPalettes","swatchInfo","colorObj","newColorId","length","newColorObj","keys","mergedColors","getMergedColors","history","culledColors","src_Sidebar","src_Palettes","connect","_ref","App","redux_zero_react","BrowserRouter","Route","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5a1e993.chunk.js","sourcesContent":["import createStore from \"redux-zero\";\n\nconst initialState = {\n  colors: {\n    0: {\n      id: 0,\n      hex: \"#04aade\"\n    }\n  }\n};\nconst store = createStore(initialState);\n\nexport default store;\n","import bezier from \"bezier-easing\";\n\nexport const linear = bezier(0.5, 0.5, 0.5, 0.5);\n\nexport const easeInCubic = bezier(0.55, 0.055, 0.675, 0.19);\nexport const easeOutCubic = bezier(0.215, 0.61, 0.355, 1);\nexport const easeInOutCubic = bezier(0.645, 0.045, 0.355, 1);\n\nexport const easeInSine = bezier(0.47, 0, 0.745, 0.715);\nexport const easeOutSine = bezier(0.39, 0.575, 0.565, 1);\nexport const easeInOutSine = bezier(0.445, 0.05, 0.55, 0.95);\n\nexport const easeInQuad = bezier(0.55, 0.085, 0.68, 0.53);\nexport const easeOutQuad = bezier(0.25, 0.46, 0.45, 0.94);\nexport const easeInOutQuad = bezier(0.455, 0.03, 0.515, 0.955);\n\nexport const easeInQuart = bezier(0.895, 0.03, 0.685, 0.22);\nexport const easeOutQuart = bezier(0.165, 0.84, 0.44, 1);\nexport const easeInOutQuart = bezier(0.77, 0, 0.175, 1);\n\nexport const easeInCirc = bezier(0.6, 0.04, 0.98, 0.335);\nexport const easeOutCirc = bezier(0.075, 0.82, 0.165, 1);\nexport const easeInOutCirc = bezier(0.785, 0.135, 0.15, 0.86);\n\nexport const easeInQuint = bezier(0.755, 0.05, 0.855, 0.06);\nexport const easeOutQuint = bezier(0.23, 1, 0.32, 1);\nexport const easeInOutQuint = bezier(0.86, 0, 0.07, 1);\n\nexport const easeInExpo = bezier(0.95, 0.05, 0.795, 0.035);\nexport const easeOutExpo = bezier(0.19, 1, 0.22, 1);\nexport const easeInOutExpo = bezier(1, 0, 0, 1);\n\nexport const easeInBack = bezier(0.6, -0.28, 0.735, 0.045);\nexport const easeOutBack = bezier(0.175, 0.885, 0.32, 1.275);\nexport const easeInOutBack = bezier(0.68, -0.55, 0.265, 1.55);\n","const crayolaColors = [\n  {\n    hex: \"#EFDECD\",\n    name: \"Almond\",\n    rgb: \"(239, 222, 205)\"\n  },\n  {\n    hex: \"#CD9575\",\n    name: \"Antique Brass\",\n    rgb: \"(205, 149, 117)\"\n  },\n  {\n    hex: \"#FDD9B5\",\n    name: \"Apricot\",\n    rgb: \"(253, 217, 181)\"\n  },\n  {\n    hex: \"#78DBE2\",\n    name: \"Aquamarine\",\n    rgb: \"(120, 219, 226)\"\n  },\n  {\n    hex: \"#87A96B\",\n    name: \"Asparagus\",\n    rgb: \"(135, 169, 107)\"\n  },\n  {\n    hex: \"#FFA474\",\n    name: \"Atomic Tangerine\",\n    rgb: \"(255, 164, 116)\"\n  },\n  {\n    hex: \"#FAE7B5\",\n    name: \"Banana Mania\",\n    rgb: \"(250, 231, 181)\"\n  },\n  {\n    hex: \"#9F8170\",\n    name: \"Beaver\",\n    rgb: \"(159, 129, 112)\"\n  },\n  {\n    hex: \"#FD7C6E\",\n    name: \"Bittersweet\",\n    rgb: \"(253, 124, 110)\"\n  },\n  {\n    hex: \"#000000\",\n    name: \"Black\",\n    rgb: \"(0,0,0)\"\n  },\n  {\n    hex: \"#ACE5EE\",\n    name: \"Blizzard Blue\",\n    rgb: \"(172, 229, 238)\"\n  },\n  {\n    hex: \"#1F75FE\",\n    name: \"Blue\",\n    rgb: \"(31, 117, 254)\"\n  },\n  {\n    hex: \"#A2A2D0\",\n    name: \"Blue Bell\",\n    rgb: \"(162, 162, 208)\"\n  },\n  {\n    hex: \"#6699CC\",\n    name: \"Blue Gray\",\n    rgb: \"(102, 153, 204)\"\n  },\n  {\n    hex: \"#0D98BA\",\n    name: \"Blue Green\",\n    rgb: \"(13, 152, 186)\"\n  },\n  {\n    hex: \"#7366BD\",\n    name: \"Blue Violet\",\n    rgb: \"(115, 102, 189)\"\n  },\n  {\n    hex: \"#DE5D83\",\n    name: \"Blush\",\n    rgb: \"(222, 93, 131)\"\n  },\n  {\n    hex: \"#CB4154\",\n    name: \"Brick Red\",\n    rgb: \"(203, 65, 84)\"\n  },\n  {\n    hex: \"#B4674D\",\n    name: \"Brown\",\n    rgb: \"(180, 103, 77)\"\n  },\n  {\n    hex: \"#FF7F49\",\n    name: \"Burnt Orange\",\n    rgb: \"(255, 127, 73)\"\n  },\n  {\n    hex: \"#EA7E5D\",\n    name: \"Burnt Sienna\",\n    rgb: \"(234, 126, 93)\"\n  },\n  {\n    hex: \"#B0B7C6\",\n    name: \"Cadet Blue\",\n    rgb: \"(176, 183, 198)\"\n  },\n  {\n    hex: \"#FFFF99\",\n    name: \"Canary\",\n    rgb: \"(255, 255, 153)\"\n  },\n  {\n    hex: \"#1CD3A2\",\n    name: \"Caribbean Green\",\n    rgb: \"(28, 211, 162)\"\n  },\n  {\n    hex: \"#FFAACC\",\n    name: \"Carnation Pink\",\n    rgb: \"(255, 170, 204)\"\n  },\n  {\n    hex: \"#DD4492\",\n    name: \"Cerise\",\n    rgb: \"(221, 68, 146)\"\n  },\n  {\n    hex: \"#1DACD6\",\n    name: \"Cerulean\",\n    rgb: \"(29, 172, 214)\"\n  },\n  {\n    hex: \"#BC5D58\",\n    name: \"Chestnut\",\n    rgb: \"(188, 93, 88)\"\n  },\n  {\n    hex: \"#DD9475\",\n    name: \"Copper\",\n    rgb: \"(221, 148, 117)\"\n  },\n  {\n    hex: \"#9ACEEB\",\n    name: \"Cornflower\",\n    rgb: \"(154, 206, 235)\"\n  },\n  {\n    hex: \"#FFBCD9\",\n    name: \"Cotton Candy\",\n    rgb: \"(255, 188, 217)\"\n  },\n  {\n    hex: \"#FDDB6D\",\n    name: \"Dandelion\",\n    rgb: \"(253, 219, 109)\"\n  },\n  {\n    hex: \"#2B6CC4\",\n    name: \"Denim\",\n    rgb: \"(43, 108, 196)\"\n  },\n  {\n    hex: \"#EFCDB8\",\n    name: \"Desert Sand\",\n    rgb: \"(239, 205, 184)\"\n  },\n  {\n    hex: \"#6E5160\",\n    name: \"Eggplant\",\n    rgb: \"(110, 81, 96)\"\n  },\n  {\n    hex: \"#CEFF1D\",\n    name: \"Electric Lime\",\n    rgb: \"(206, 255, 29)\"\n  },\n  {\n    hex: \"#71BC78\",\n    name: \"Fern\",\n    rgb: \"(113, 188, 120)\"\n  },\n  {\n    hex: \"#6DAE81\",\n    name: \"Forest Green\",\n    rgb: \"(109, 174, 129)\"\n  },\n  {\n    hex: \"#C364C5\",\n    name: \"Fuchsia\",\n    rgb: \"(195, 100, 197)\"\n  },\n  {\n    hex: \"#CC6666\",\n    name: \"Fuzzy Wuzzy\",\n    rgb: \"(204, 102, 102)\"\n  },\n  {\n    hex: \"#E7C697\",\n    name: \"Gold\",\n    rgb: \"(231, 198, 151)\"\n  },\n  {\n    hex: \"#FCD975\",\n    name: \"Goldenrod\",\n    rgb: \"(252, 217, 117)\"\n  },\n  {\n    hex: \"#A8E4A0\",\n    name: \"Granny Smith Apple\",\n    rgb: \"(168, 228, 160)\"\n  },\n  {\n    hex: \"#95918C\",\n    name: \"Gray\",\n    rgb: \"(149, 145, 140)\"\n  },\n  {\n    hex: \"#1CAC78\",\n    name: \"Green\",\n    rgb: \"(28, 172, 120)\"\n  },\n  {\n    hex: \"#1164B4\",\n    name: \"Green Blue\",\n    rgb: \"(17, 100, 180)\"\n  },\n  {\n    hex: \"#F0E891\",\n    name: \"Green Yellow\",\n    rgb: \"(240, 232, 145)\"\n  },\n  {\n    hex: \"#FF1DCE\",\n    name: \"Hot Magenta\",\n    rgb: \"(255, 29, 206)\"\n  },\n  {\n    hex: \"#B2EC5D\",\n    name: \"Inchworm\",\n    rgb: \"(178, 236, 93)\"\n  },\n  {\n    hex: \"#5D76CB\",\n    name: \"Indigo\",\n    rgb: \"(93, 118, 203)\"\n  },\n  {\n    hex: \"#CA3767\",\n    name: \"Jazzberry Jam\",\n    rgb: \"(202, 55, 103)\"\n  },\n  {\n    hex: \"#3BB08F\",\n    name: \"Jungle Green\",\n    rgb: \"(59, 176, 143)\"\n  },\n  {\n    hex: \"#FEFE22\",\n    name: \"Laser Lemon\",\n    rgb: \"(254, 254, 34)\"\n  },\n  {\n    hex: \"#FCB4D5\",\n    name: \"Lavender\",\n    rgb: \"(252, 180, 213)\"\n  },\n  {\n    hex: \"#FFF44F\",\n    name: \"Lemon Yellow\",\n    rgb: \"(255, 244, 79)\"\n  },\n  {\n    hex: \"#FFBD88\",\n    name: \"Macaroni and Cheese\",\n    rgb: \"(255, 189, 136)\"\n  },\n  {\n    hex: \"#F664AF\",\n    name: \"Magenta\",\n    rgb: \"(246, 100, 175)\"\n  },\n  {\n    hex: \"#AAF0D1\",\n    name: \"Magic Mint\",\n    rgb: \"(170, 240, 209)\"\n  },\n  {\n    hex: \"#CD4A4C\",\n    name: \"Mahogany\",\n    rgb: \"(205, 74, 76)\"\n  },\n  {\n    hex: \"#EDD19C\",\n    name: \"Maize\",\n    rgb: \"(237, 209, 156)\"\n  },\n  {\n    hex: \"#979AAA\",\n    name: \"Manatee\",\n    rgb: \"(151, 154, 170)\"\n  },\n  {\n    hex: \"#FF8243\",\n    name: \"Mango Tango\",\n    rgb: \"(255, 130, 67)\"\n  },\n  {\n    hex: \"#C8385A\",\n    name: \"Maroon\",\n    rgb: \"(200, 56, 90)\"\n  },\n  {\n    hex: \"#EF98AA\",\n    name: \"Mauvelous\",\n    rgb: \"(239, 152, 170)\"\n  },\n  {\n    hex: \"#FDBCB4\",\n    name: \"Melon\",\n    rgb: \"(253, 188, 180)\"\n  },\n  {\n    hex: \"#1A4876\",\n    name: \"Midnight Blue\",\n    rgb: \"(26, 72, 118)\"\n  },\n  {\n    hex: \"#30BA8F\",\n    name: \"Mountain Meadow\",\n    rgb: \"(48, 186, 143)\"\n  },\n  {\n    hex: \"#C54B8C\",\n    name: \"Mulberry\",\n    rgb: \"(197, 75, 140)\"\n  },\n  {\n    hex: \"#1974D2\",\n    name: \"Navy Blue\",\n    rgb: \"(25, 116, 210)\"\n  },\n  {\n    hex: \"#FFA343\",\n    name: \"Neon Carrot\",\n    rgb: \"(255, 163, 67)\"\n  },\n  {\n    hex: \"#BAB86C\",\n    name: \"Olive Green\",\n    rgb: \"(186, 184, 108)\"\n  },\n  {\n    hex: \"#FF7538\",\n    name: \"Orange\",\n    rgb: \"(255, 117, 56)\"\n  },\n  {\n    hex: \"#FF2B2B\",\n    name: \"Orange Red\",\n    rgb: \"(255, 43, 43)\"\n  },\n  {\n    hex: \"#F8D568\",\n    name: \"Orange Yellow\",\n    rgb: \"(248, 213, 104)\"\n  },\n  {\n    hex: \"#E6A8D7\",\n    name: \"Orchid\",\n    rgb: \"(230, 168, 215)\"\n  },\n  {\n    hex: \"#414A4C\",\n    name: \"Outer Space\",\n    rgb: \"(65, 74, 76)\"\n  },\n  {\n    hex: \"#FF6E4A\",\n    name: \"Outrageous Orange\",\n    rgb: \"(255, 110, 74)\"\n  },\n  {\n    hex: \"#1CA9C9\",\n    name: \"Pacific Blue\",\n    rgb: \"(28, 169, 201)\"\n  },\n  {\n    hex: \"#FFCFAB\",\n    name: \"Peach\",\n    rgb: \"(255, 207, 171)\"\n  },\n  {\n    hex: \"#C5D0E6\",\n    name: \"Periwinkle\",\n    rgb: \"(197, 208, 230)\"\n  },\n  {\n    hex: \"#FDDDE6\",\n    name: \"Piggy Pink\",\n    rgb: \"(253, 221, 230)\"\n  },\n  {\n    hex: \"#158078\",\n    name: \"Pine Green\",\n    rgb: \"(21, 128, 120)\"\n  },\n  {\n    hex: \"#FC74FD\",\n    name: \"Pink Flamingo\",\n    rgb: \"(252, 116, 253)\"\n  },\n  {\n    hex: \"#F78FA7\",\n    name: \"Pink Sherbet\",\n    rgb: \"(247, 143, 167)\"\n  },\n  {\n    hex: \"#8E4585\",\n    name: \"Plum\",\n    rgb: \"(142, 69, 133)\"\n  },\n  {\n    hex: \"#7442C8\",\n    name: \"Purple Heart\",\n    rgb: \"(116, 66, 200)\"\n  },\n  {\n    hex: \"#9D81BA\",\n    name: \"Purple Mountain's Majesty\",\n    rgb: \"(157, 129, 186)\"\n  },\n  {\n    hex: \"#FE4EDA\",\n    name: \"Purple Pizzazz\",\n    rgb: \"(254, 78, 218)\"\n  },\n  {\n    hex: \"#FF496C\",\n    name: \"Radical Red\",\n    rgb: \"(255, 73, 108)\"\n  },\n  {\n    hex: \"#D68A59\",\n    name: \"Raw Sienna\",\n    rgb: \"(214, 138, 89)\"\n  },\n  {\n    hex: \"#714B23\",\n    name: \"Raw Umber\",\n    rgb: \"(113, 75, 35)\"\n  },\n  {\n    hex: \"#FF48D0\",\n    name: \"Razzle Dazzle Rose\",\n    rgb: \"(255, 72, 208)\"\n  },\n  {\n    hex: \"#E3256B\",\n    name: \"Razzmatazz\",\n    rgb: \"(227, 37, 107)\"\n  },\n  {\n    hex: \"#EE204D\",\n    name: \"Red\",\n    rgb: \"(238,32 ,77 )\"\n  },\n  {\n    hex: \"#FF5349\",\n    name: \"Red Orange\",\n    rgb: \"(255, 83, 73)\"\n  },\n  {\n    hex: \"#C0448F\",\n    name: \"Red Violet\",\n    rgb: \"(192, 68, 143)\"\n  },\n  {\n    hex: \"#1FCECB\",\n    name: \"Robin's Egg Blue\",\n    rgb: \"(31, 206, 203)\"\n  },\n  {\n    hex: \"#7851A9\",\n    name: \"Royal Purple\",\n    rgb: \"(120, 81, 169)\"\n  },\n  {\n    hex: \"#FF9BAA\",\n    name: \"Salmon\",\n    rgb: \"(255, 155, 170)\"\n  },\n  {\n    hex: \"#FC2847\",\n    name: \"Scarlet\",\n    rgb: \"(252, 40, 71)\"\n  },\n  {\n    hex: \"#76FF7A\",\n    name: \"Screamin' Green\",\n    rgb: \"(118, 255, 122)\"\n  },\n  {\n    hex: \"#9FE2BF\",\n    name: \"Sea Green\",\n    rgb: \"(159, 226, 191)\"\n  },\n  {\n    hex: \"#A5694F\",\n    name: \"Sepia\",\n    rgb: \"(165, 105, 79)\"\n  },\n  {\n    hex: \"#8A795D\",\n    name: \"Shadow\",\n    rgb: \"(138, 121, 93)\"\n  },\n  {\n    hex: \"#45CEA2\",\n    name: \"Shamrock\",\n    rgb: \"(69, 206, 162)\"\n  },\n  {\n    hex: \"#FB7EFD\",\n    name: \"Shocking Pink\",\n    rgb: \"(251, 126, 253)\"\n  },\n  {\n    hex: \"#CDC5C2\",\n    name: \"Silver\",\n    rgb: \"(205, 197, 194)\"\n  },\n  {\n    hex: \"#80DAEB\",\n    name: \"Sky Blue\",\n    rgb: \"(128, 218, 235)\"\n  },\n  {\n    hex: \"#ECEABE\",\n    name: \"Spring Green\",\n    rgb: \"(236, 234, 190)\"\n  },\n  {\n    hex: \"#FFCF48\",\n    name: \"Sunglow\",\n    rgb: \"(255, 207, 72)\"\n  },\n  {\n    hex: \"#FD5E53\",\n    name: \"Sunset Orange\",\n    rgb: \"(253, 94, 83)\"\n  },\n  {\n    hex: \"#FAA76C\",\n    name: \"Tan\",\n    rgb: \"(250, 167, 108)\"\n  },\n  {\n    hex: \"#18A7B5\",\n    name: \"Teal Blue\",\n    rgb: \"(24, 167, 181)\"\n  },\n  {\n    hex: \"#EBC7DF\",\n    name: \"Thistle\",\n    rgb: \"(235, 199, 223)\"\n  },\n  {\n    hex: \"#FC89AC\",\n    name: \"Tickle Me Pink\",\n    rgb: \"(252, 137, 172)\"\n  },\n  {\n    hex: \"#DBD7D2\",\n    name: \"Timberwolf\",\n    rgb: \"(219, 215, 210)\"\n  },\n  {\n    hex: \"#17806D\",\n    name: \"Tropical Rain Forest\",\n    rgb: \"(23, 128, 109)\"\n  },\n  {\n    hex: \"#DEAA88\",\n    name: \"Tumbleweed\",\n    rgb: \"(222, 170, 136)\"\n  },\n  {\n    hex: \"#77DDE7\",\n    name: \"Turquoise Blue\",\n    rgb: \"(119, 221, 231)\"\n  },\n  {\n    hex: \"#FFFF66\",\n    name: \"Unmellow Yellow\",\n    rgb: \"(255, 255, 102)\"\n  },\n  {\n    hex: \"#926EAE\",\n    name: \"Violet (Purple)\",\n    rgb: \"(146, 110, 174)\"\n  },\n  {\n    hex: \"#324AB2\",\n    name: \"Violet Blue\",\n    rgb: \"(50, 74, 178)\"\n  },\n  {\n    hex: \"#F75394\",\n    name: \"Violet Red\",\n    rgb: \"(247, 83, 148)\"\n  },\n  {\n    hex: \"#FFA089\",\n    name: \"Vivid Tangerine\",\n    rgb: \"(255, 160, 137)\"\n  },\n  {\n    hex: \"#8F509D\",\n    name: \"Vivid Violet\",\n    rgb: \"(143, 80, 157)\"\n  },\n  {\n    hex: \"#FFFFFF\",\n    name: \"White\",\n    rgb: \"(255, 255, 255)\"\n  },\n  {\n    hex: \"#A2ADD0\",\n    name: \"Wild Blue Yonder\",\n    rgb: \"(162, 173, 208)\"\n  },\n  {\n    hex: \"#FF43A4\",\n    name: \"Wild Strawberry\",\n    rgb: \"(255, 67, 164)\"\n  },\n  {\n    hex: \"#FC6C85\",\n    name: \"Wild Watermelon\",\n    rgb: \"(252, 108, 133)\"\n  },\n  {\n    hex: \"#CDA4DE\",\n    name: \"Wisteria\",\n    rgb: \"(205, 164, 222)\"\n  },\n  {\n    hex: \"#FCE883\",\n    name: \"Yellow\",\n    rgb: \"(252, 232, 131)\"\n  },\n  {\n    hex: \"#C5E384\",\n    name: \"Yellow Green\",\n    rgb: \"(197, 227, 132)\"\n  },\n  {\n    hex: \"#FFAE42\",\n    name: \"Yellow Orange\",\n    rgb: \"(255, 174, 66)\"\n  }\n];\n\nexport default crayolaColors;\n","import chroma from \"chroma-js\";\nimport _ from \"lodash\";\n\nimport * as Curves from \"./curves.js\";\nimport crayolaColors from \"./crayolaColors\";\n\nexport default function(sourceColor) {\n  // Bail out if there isn't really a source color provided\n  if (!sourceColor) return true;\n\n  // Configuration\n  let steps = 12; // Number of color swatches in each palette\n  let contrastRange = [1.1, 19]; // We'll be generating palettes based on text contrast\n\n  // build a distribution of contrast values we will target\n  let contrastDistribution = _.times(steps, index => {\n    let curveStep = Curves[\"easeInOutQuint\"](index / (steps - 1));\n    let range = contrastRange[1] - contrastRange[0];\n    return curveStep * range + contrastRange[0];\n  });\n\n  // Figure out the closest contrast value for source color and get the index\n  let sourceContrast = chroma.contrast(sourceColor, \"white\").toFixed(2);\n  let closestContrastValue = _.first(\n    _.sortBy(contrastDistribution, contrastStep => {\n      return Math.abs(contrastStep - sourceContrast);\n    })\n  );\n\n  // Return the index of the closest matching value\n  let sourceColorIndex = _.findIndex(contrastDistribution, o => {\n    return o === closestContrastValue;\n  });\n\n  // Confine a number to a range from 0 to 1\n  let confine = number => {\n    return Math.max(Math.min(number, 1), 0);\n  };\n\n  // Build a wider set of colors to choose from\n  let expandedColors = [];\n  let hueIncrement = 0.15; // rate of hue change\n  let satIncrement = 0.008; // rate of saturation change\n  let lumIncrement = 0.015; // rate of luminosity change\n  _.times(steps * 10, index => {\n    let sourceColorHSV = chroma(sourceColor).hsv();\n    let lighterHue = sourceColorHSV[0] + hueIncrement * index;\n    let lighterSat = confine(sourceColorHSV[1] - satIncrement * index);\n    let lighterLum = confine(sourceColorHSV[2] + lumIncrement * index);\n    let darkerHue = sourceColorHSV[0] - hueIncrement * 2 * index;\n    let darkerSat = confine(sourceColorHSV[1] + satIncrement * 4 * index);\n    let darkerLum = confine(sourceColorHSV[2] - lumIncrement * index);\n    let lighterColor = chroma(\n      chroma.hsv(lighterHue, lighterSat, lighterLum)\n    ).hex();\n    let darkerColor = chroma(chroma.hsv(darkerHue, darkerSat, darkerLum)).hex();\n    expandedColors.push(darkerColor, lighterColor);\n  });\n\n  // Select a color for the light end of our palette based on black text contrast\n  let lightestColor = _.first(\n    _.sortBy(expandedColors, color => {\n      let colorContrast = chroma.contrast(color, \"black\").toFixed(2);\n      return Math.abs(colorContrast - 19);\n    })\n  );\n\n  // Select a color for the dark end of our palette based on white text contrast\n  let darkestColor = _.first(\n    _.sortBy(expandedColors, color => {\n      let colorContrast = chroma.contrast(color, \"white\").toFixed(2);\n      return Math.abs(colorContrast - 18);\n    })\n  );\n\n  // Build a color palette from the lightest, darkest and source colors\n  let colorGradient = chroma\n    .scale([\n      chroma(lightestColor).hex(),\n      sourceColor,\n      chroma(darkestColor).hex()\n    ])\n    .domain([0, sourceColorIndex / (steps - 1), 1])\n    .colors(steps);\n\n  // Assemble the swatch list for this palette\n  let swatchList = _.map(colorGradient, (color, index) => {\n    const contrastWhite = chroma.contrast(color, \"white\").toFixed(2);\n    const contrastBlack = chroma.contrast(color, \"black\").toFixed(2);\n    var displayColor = \"\";\n    if (contrastWhite >= 4.5) {\n      displayColor = \"white\";\n    } else {\n      displayColor = \"black\";\n    }\n    return {\n      hex: chroma(color).hex(),\n      hue: chroma(color).hsv()[0],\n      sat: chroma(color).hsv()[1],\n      lum: chroma(color).hsv()[2],\n      hsv: chroma(color).hsv(),\n      hsl: chroma(color).hsl(),\n      rgb: chroma(color).rgb(),\n      contrastBlack: contrastBlack,\n      contrastWhite: contrastWhite,\n      displayColor: displayColor,\n      sourceColorIndex,\n      steps\n    };\n  });\n\n  // Pick a name for this set of swatches and apply it to each swatch\n  let swatchName = _.first(\n    _.orderBy(\n      _.map(crayolaColors, color => {\n        return {\n          ...color,\n          distance: chroma.distance(color.hex, sourceColor)\n        };\n      }),\n      \"distance\",\n      \"asc\"\n    )\n  ).name;\n\n  // Make the swatch name lowercase and replace spaces with hyphens\n  let swatchNameFormatted = swatchName\n    .trim()\n    .replace(/\\s/g, \"-\")\n    .toLowerCase();\n\n  // Add swatch names to each swatch in the palette\n  _.each(swatchList, (swatch, i) => {\n    swatchList[i].name = `${swatchNameFormatted}-${i}`;\n  });\n\n  return {\n    name: swatchName,\n    swatches: swatchList,\n    sourceColorIndex: swatchList[0].sourceColorIndex\n  };\n}\n","import _ from \"lodash\";\n\nconst actions = store => ({\n  updateColor: (state, color) => ({\n    colors: {\n      ...state.colors,\n      ..._.keyBy([color], \"id\")\n    }\n  }),\n  removeColor: (state, color) => ({\n    colors: _.filter(state.colors, existingColor => {\n      return existingColor.id !== color.id;\n    })\n  }),\n  replaceColors: (state, colors) => ({ colors })\n});\n\nexport default actions;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nclass Palettes extends Component {\n  render() {\n    return (\n      <div\n        className=\"swatch-area\"\n        style={{ display: \"flex\", flexDirection: \"row\" }}\n      >\n        {_.map(_.orderBy(this.props.colors, \"id\", \"desc\"), (color, index) => {\n          // Generate a color palette from each source color\n          return (\n            <div key={index} className=\"swatch-list\">\n              {_.map(color.swatches, (swatchColor, index) => {\n                return <Swatch key={index} index={index} color={swatchColor} />;\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nPalettes.propTypes = {\n  colors: PropTypes.object.isRequired\n};\n\nexport default Palettes;\n\nconst Swatch = props => {\n  const styles = {\n    color: props.color.displayColor,\n    backgroundColor: props.color.hex\n  };\n  const contrastBlackStyles = {\n    color: \"black\"\n  };\n  const contrastWhiteStyles = {\n    color: \"white\"\n  };\n\n  const SourceMarker = () => {\n    if (props.color.sourceColorIndex === props.index) {\n      return <span>*</span>;\n    } else {\n      return null;\n    }\n  };\n  return (\n    <div className=\"swatch\" style={styles}>\n      <div className=\"swatch__info\">\n        <span className=\"swatch__info-segment\">{props.color.hex}</span>\n        <span className=\"swatch__info-segment\" style={contrastBlackStyles}>\n          {props.color.contrastBlack}b\n        </span>\n        <span className=\"swatch__info-segment\" style={contrastWhiteStyles}>\n          {props.color.contrastWhite}w\n        </span>\n        <SourceMarker />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport reactCSS from \"reactcss\";\nimport chroma from \"chroma-js\";\n\nclass ColorPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayColorPicker: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  }\n\n  handleClose() {\n    this.setState({ displayColorPicker: false });\n  }\n\n  handleChange(color) {\n    this.props.addOrUpdateColor({ hex: color.hex, id: this.props.color.id });\n    this.setState({ displayColorPicker: false });\n  }\n\n  render() {\n    const color = chroma(this.props.color.hex);\n    const styles = reactCSS({\n      default: {\n        color: {\n          width: \"36px\",\n          height: \"14px\",\n          borderRadius: \"2px\",\n          background: `rgb(${color.rgb()[0]}, ${color.rgb()[1]}, ${\n            color.rgb()[2]\n          })`\n        },\n        swatch: {\n          padding: \"5px\",\n          background: \"#fff\",\n          borderRadius: \"1px\",\n          boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\n          display: \"inline-block\",\n          cursor: \"pointer\"\n        },\n        popover: {\n          position: \"absolute\",\n          zIndex: \"2\"\n        },\n        cover: {\n          position: \"fixed\",\n          top: \"0px\",\n          right: \"0px\",\n          bottom: \"0px\",\n          left: \"0px\"\n        }\n      }\n    });\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={this.handleClick}>\n          <div style={styles.color} />\n        </div>\n        {this.state.displayColorPicker ? (\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={this.handleClose} />\n            <CompactPicker\n              color={this.props.color.hex}\n              onChange={this.handleChange}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport chroma from \"chroma-js\";\n\nclass ColorFinder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comparison: null,\n      search: \"\",\n      result: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ search: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    // get some info about the color that was submitted\n    let submittedColor = chroma(this.state.search);\n    let submittedContrastWhite = chroma\n      .contrast(submittedColor.hex(), \"white\")\n      .toFixed(2);\n    let submittedContrastBlack = chroma\n      .contrast(submittedColor.hex(), \"black\")\n      .toFixed(2);\n    let submittedDisplayColor = \"\";\n    if (submittedContrastWhite >= 4.5) {\n      submittedDisplayColor = \"white\";\n    } else {\n      submittedDisplayColor = \"black\";\n    }\n    let comparison = {\n      hex: submittedColor.hex(),\n      contrastWhite: submittedContrastWhite,\n      contrastBlack: submittedContrastBlack,\n      displayColor: submittedDisplayColor\n    };\n    // Get all swatches from all palettes\n    let allSwatches = [];\n    _.each(this.props.colors, color => {\n      allSwatches.push(...color.swatches);\n    });\n    console.log(allSwatches);\n    // get the swatch with the color closest to what was submitted\n    let colorsWithDistance = _.map(allSwatches, color => {\n      return {\n        ...color,\n        colorDistance: chroma.distance(color.hex, comparison.hex)\n      };\n    });\n    let closestColor = _.first(\n      _.orderBy(colorsWithDistance, \"colorDistance\", \"asc\")\n    );\n    console.log(colorsWithDistance);\n    console.log(closestColor);\n    this.setState({ comparison, result: closestColor, search: comparison.hex });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"search\"\n            value={this.state.search}\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">Find a color</button>\n        </form>\n        {this.state.result && (\n          <div>\n            <p style={{ lineHeight: 1.5 }}>You searched for: </p>\n            <p>\n              <span\n                style={{\n                  background: this.state.comparison.hex,\n                  color: this.state.comparison.displayColor,\n                  padding: \"0 .5rem\",\n                  borderRadius: \".5rem\"\n                }}\n              >\n                {this.state.comparison.hex}\n              </span>\n            </p>\n            <p>The closest color is:</p>\n            <p>\n              <span\n                style={{\n                  background: this.state.result.hex,\n                  color: this.state.result.displayColor,\n                  padding: \"0 .5rem\",\n                  borderRadius: \".5rem\"\n                }}\n              >\n                {`${this.state.result.hex} - ${this.state.result.name}`}\n              </span>{\" \"}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nColorFinder.propTypes = {\n  colors: PropTypes.object.isRequired\n};\n\nexport default ColorFinder;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nconst outputTypes = {\n  SASS: \"SASS\",\n  STYL: \"STYL\",\n  LESS: \"LESS\",\n  CSS: \"CSS\",\n  JS: \"JS\"\n};\n\nclass CodeOutput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false,\n      outputType: outputTypes.SASS\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.changeOutputType = this.changeOutputType.bind(this);\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  changeOutputType(e) {\n    this.setState({ outputType: e.target.value });\n  }\n\n  render() {\n    const modalStyles = {\n      content: {\n        width: \"400px\",\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\"\n      }\n    };\n\n    const closeButtonStyles = {\n      position: \"absolute\",\n      top: \"1rem\",\n      right: \"1rem\"\n    };\n\n    let getSass = () => {\n      let code = `// Sass color variables\\n`;\n      _.each(this.props.colors, color => {\n        code += `// Shades of ${color.name}\\n`;\n        _.each(color.swatches, swatch => {\n          code += `$${swatch.name}: ${swatch.hex};\\n`;\n        });\n      });\n      return code;\n    };\n\n    let getStylus = () => {\n      let code = `// Stylus color variables\\n`;\n      _.each(this.props.colors, color => {\n        code += `\\n// Shades of ${color.name}\\n`;\n        _.each(color.swatches, swatch => {\n          code += `${swatch.name} = ${swatch.hex}\\n`;\n        });\n      });\n      return code;\n    };\n\n    let getLess = () => {\n      let code = `// Less color variables\\n`;\n      _.each(this.props.colors, color => {\n        code += `\\n// Shades of ${color.name}\\n`;\n        _.each(color.swatches, swatch => {\n          code += `@${swatch.name}: ${swatch.hex};\\n`;\n        });\n      });\n      return code;\n    };\n\n    let getCss = () => {\n      let code = `// CSS color variables\\n`;\n      code += `:root {\\n`;\n      _.each(this.props.colors, color => {\n        code += `\\n  /* Shades of ${color.name} */\\n`;\n        _.each(color.swatches, swatch => {\n          code += `  --${swatch.name}: ${swatch.hex};\\n`;\n        });\n      });\n      code += `}\\n`;\n      return code;\n    };\n\n    let getJavascript = () => {\n      let code = `// JS color variables\\n`;\n      code += `const colorPalette = {\\n`;\n      _.each(this.props.colors, color => {\n        code += `\\n  // Shades of ${color.name}\\n`;\n        _.each(color.swatches, swatch => {\n          code += `  ${swatch.name}: ${swatch.hex},\\n`;\n        });\n      });\n      code += `};`;\n      return code;\n    };\n\n    let getCode = () => {\n      switch (this.state.outputType) {\n        case outputTypes.SASS:\n          return getSass();\n\n        case outputTypes.STYL:\n          return getStylus();\n\n        case outputTypes.LESS:\n          return getLess();\n\n        case outputTypes.CSS:\n          return getCss();\n\n        case outputTypes.JS:\n          return getJavascript();\n\n        default:\n          return null;\n      }\n    };\n\n    let copyCode = () => {\n      let codeTextArea = document.getElementById(\"code-output__textarea\");\n      codeTextArea.select();\n      document.execCommand(\"copy\");\n    };\n\n    return (\n      <div className=\"code-output\">\n        <button onClick={this.openModal}>Get code</button>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          style={modalStyles}\n          onRequestClose={this.closeModal}\n        >\n          <div>\n            <button onClick={this.closeModal} style={closeButtonStyles}>\n              Close\n            </button>\n          </div>\n          <div>\n            <select\n              value={this.state.outputType}\n              onChange={this.changeOutputType}\n            >\n              <option value={outputTypes.SASS}>Sass</option>\n              <option value={outputTypes.STYL}>Stylus</option>\n              <option value={outputTypes.LESS}>Less</option>\n              <option value={outputTypes.CSS}>CSS</option>\n              <option value={outputTypes.JS}>Javascript</option>\n            </select>\n          </div>\n          <div>\n            <p>{this.state.outputType} variables</p>\n            <textarea\n              id=\"code-output__textarea\"\n              style={{ width: \"100%\", height: \"200px\" }}\n              value={getCode()}\n              readOnly\n            />\n            <button onClick={copyCode}>Copy to clipboard</button>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nCodeOutput.propTypes = {\n  colors: PropTypes.object.isRequired\n};\n\nexport default CodeOutput;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nimport ColorPicker from \"./ColorPicker\";\nimport ColorFinder from \"./ColorFinder\";\nimport CodeOutput from \"./CodeOutput\";\n\nclass Sidebar extends Component {\n  render() {\n    const rowStyles = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      padding: \".25rem 0\"\n    };\n\n    return (\n      <div className=\"sidebar\">\n        <button onClick={this.props.addOrUpdateColor}>Add column</button>\n        {_.map(_.orderBy(this.props.colors, \"id\", \"desc\"), (color, index) => {\n          return (\n            <div key={index} style={rowStyles}>\n              <ColorPicker\n                color={color}\n                addOrUpdateColor={this.props.addOrUpdateColor}\n              />\n              <div style={{ flex: 1, padding: \"0 .5rem\" }}>{color.hex}</div>\n              <div>\n                <button\n                  onClick={() => {\n                    this.props.removeColumn(color);\n                  }}\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          );\n        })}\n        <hr />\n        <div>\n          <p>\n            Supply a color code (Valid CSS value)and get in return the name and\n            hex of a valid color from this palette\n          </p>\n          <ColorFinder colors={this.props.colors} />\n        </div>\n        <hr />\n        <div>\n          <p>Get example color variables for styles and Javascript</p>\n          <CodeOutput colors={this.props.colors} />\n        </div>\n        <hr />\n        <div>\n          <p>\n            <a href=\"/?color=%23ffffff&color=%237d27bc&color=%23F03B97&color=%23EA3A3A&color=%23ffa934&color=%2395ca4e&color=%2304aade\">\n              Luminoso Color Palette\n            </a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  addOrUpdateColor: PropTypes.func.isRequired,\n  colors: PropTypes.object.isRequired,\n  removeColumn: PropTypes.func.isRequired\n};\n\nexport default Sidebar;\n","import React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport _ from \"lodash\";\nimport { connect } from \"redux-zero/react\";\n\nimport generateColors from \"./generateColors\";\nimport actions from \"./actions\";\nimport Palettes from \"./Palettes\";\nimport Sidebar from \"./Sidebar\";\n\n// Get colors from query params when this component mounts\nconst getColorParams = props => {\n  // Get query params\n  let params = queryString.parse(props.location.search);\n  let colorQueries = [];\n  if (params.color) {\n    if (!Array.isArray(params.color)) {\n      colorQueries.push(params.color);\n    } else {\n      colorQueries = params.color;\n    }\n  }\n  // Return an array of color objects\n  return _.map(colorQueries, (color, index) => {\n    return {\n      hex: color,\n      id: index\n    };\n  });\n};\n\n// Merge any supplied color object {hex, id}, return a list set ordered by 'id'\nconst getMergedColors = (colorObj, colors) => {\n  let mergedColors = {\n    ...colors,\n    ..._.keyBy([colorObj], \"id\")\n  };\n  let colorsArray = _.map(_.orderBy(mergedColors, \"id\"), color => {\n    return color.hex;\n  });\n  return colorsArray;\n};\n\n// Build a new query string\nconst getQueryString = colors => {\n  return queryString.stringify({\n    color: _.map(_.orderBy(colors, \"id\"), color => {\n      return color;\n    })\n  });\n};\n\nclass Colors extends Component {\n  constructor(props) {\n    super(props);\n    this.addOrUpdateColor = this.addOrUpdateColor.bind(this);\n    this.removeColumn = this.removeColumn.bind(this);\n  }\n\n  componentDidMount() {\n    // When this component mounts, get colors from the query params\n    let queryColors = getColorParams(this.props);\n    let colorPalettes = _.keyBy(\n      _.map(queryColors, color => {\n        let swatchInfo = generateColors(color.hex);\n        return {\n          ...color,\n          ...swatchInfo\n        };\n      }),\n      \"id\"\n    );\n    this.props.replaceColors(colorPalettes);\n  }\n\n  addOrUpdateColor(colorObj) {\n    // If a color was supplied, use it. Otherwise fall back to new color\n    console.log(this.props.colors);\n    let newColorId = this.props.colors.length;\n    console.log(newColorId);\n    let swatchInfo = generateColors(colorObj.hex);\n    let newColorObj = colorObj.hex\n      ? {\n          ...colorObj,\n          ...swatchInfo\n        }\n      : {\n          hex: \"#666666\",\n          id: Object.keys(this.props.colors).length,\n          swatches: generateColors(\"#666666\")\n        };\n\n    // Merge the new color and add it to the store and the query params\n    let mergedColors = getMergedColors(newColorObj, this.props.colors);\n    this.props.updateColor(newColorObj);\n    this.props.history.push(`?${getQueryString(mergedColors)}`);\n  }\n\n  removeColumn(color) {\n    let culledColors = _.map(\n      _.filter(this.props.colors, existingColor => {\n        return existingColor.id !== color.id;\n      }),\n      color => {\n        return color.hex;\n      }\n    );\n    this.props.removeColor(color);\n    this.props.history.push(`?${getQueryString(culledColors)}`);\n  }\n\n  render() {\n    return (\n      <div className=\"lumicolors-tool\">\n        <Sidebar\n          addOrUpdateColor={this.addOrUpdateColor}\n          colors={this.props.colors}\n          removeColumn={this.removeColumn}\n        />\n        <Palettes colors={this.props.colors} />\n      </div>\n    );\n  }\n}\n\nconst mapToProps = ({ colors }) => ({ colors });\n\nexport default connect(\n  mapToProps,\n  actions\n)(Colors);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"redux-zero/react\";\n\nimport store from \"./store\";\nimport Colors from \"./Colors\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Route path=\"/\" component={Colors} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}