{"version":3,"sources":["store.js","curves.js","actions.js","Palettes.js","ColorPicker.js","ColorFinder.js","Sidebar.js","Colors.js","generateColors.js","App.js","serviceWorker.js","index.js"],"names":["store","createStore","colors","0","id","hex","easeInOutQuint","bezier","actions","updateColor","state","color","Object","objectSpread","_","keyBy","removeColor","filter","existingColor","replaceColors","Palettes","react_default","a","createElement","className","style","display","flexDirection","map","orderBy","this","props","index","key","swatches","swatchColor","Palettes_Swatch","Component","Swatch","styles","displayColor","backgroundColor","contrastBlack","contrastWhite","sourceColorIndex","ColorPicker","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","displayColorPicker","handleClick","bind","assertThisInitialized","handleClose","handleChange","setState","addOrUpdateColor","chroma","reactCSS","default","width","height","borderRadius","background","concat","rgb","swatch","padding","boxShadow","cursor","popover","position","zIndex","cover","top","right","bottom","left","onClick","lib","onChange","React","ColorFinder","comparison","search","result","handleSubmit","e","target","value","preventDefault","submittedColor","submittedContrastWhite","contrast","toFixed","submittedContrastBlack","submittedDisplayColor","allSwatches","each","push","apply","toConsumableArray","console","log","colorsWithDistance","colorDistance","distance","closestColor","first","onSubmit","type","name","lineHeight","Sidebar","rowStyles","alignItems","src_ColorPicker","flex","removeColumn","src_ColorFinder","getQueryString","queryString","stringify","Colors","queryColors","params","parse","location","colorQueries","Array","isArray","getColorParams","colorPalettes","sourceColor","contrastRange","contrastDistribution","times","Curves","sourceContrast","closestContrastValue","sortBy","contrastStep","Math","abs","findIndex","o","confine","number","max","min","expandedColors","steps","sourceColorHSV","hsv","lighterHue","lighterSat","lighterLum","darkerHue","hueIncrement","darkerSat","satIncrement","darkerLum","lighterColor","darkerColor","lightestColor","colorContrast","darkestColor","colorGradient","scale","domain","hue","sat","lum","hsl","generateColors","colorObj","newColorId","length","newColorObj","keys","mergedColors","getMergedColors","history","culledColors","src_Sidebar","src_Palettes","connect","_ref","App","redux_zero_react","BrowserRouter","Route","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f94f0f0.chunk.js","sourcesContent":["import createStore from \"redux-zero\";\n\nconst initialState = {\n  colors: {\n    0: {\n      id: 0,\n      hex: \"#04aade\"\n    }\n  }\n};\nconst store = createStore(initialState);\n\nexport default store;\n","import bezier from \"bezier-easing\";\n\nexport const linear = bezier(0.5, 0.5, 0.5, 0.5);\n\nexport const easeInCubic = bezier(0.55, 0.055, 0.675, 0.19);\nexport const easeOutCubic = bezier(0.215, 0.61, 0.355, 1);\nexport const easeInOutCubic = bezier(0.645, 0.045, 0.355, 1);\n\nexport const easeInSine = bezier(0.47, 0, 0.745, 0.715);\nexport const easeOutSine = bezier(0.39, 0.575, 0.565, 1);\nexport const easeInOutSine = bezier(0.445, 0.05, 0.55, 0.95);\n\nexport const easeInQuad = bezier(0.55, 0.085, 0.68, 0.53);\nexport const easeOutQuad = bezier(0.25, 0.46, 0.45, 0.94);\nexport const easeInOutQuad = bezier(0.455, 0.03, 0.515, 0.955);\n\nexport const easeInQuart = bezier(0.895, 0.03, 0.685, 0.22);\nexport const easeOutQuart = bezier(0.165, 0.84, 0.44, 1);\nexport const easeInOutQuart = bezier(0.77, 0, 0.175, 1);\n\nexport const easeInCirc = bezier(0.6, 0.04, 0.98, 0.335);\nexport const easeOutCirc = bezier(0.075, 0.82, 0.165, 1);\nexport const easeInOutCirc = bezier(0.785, 0.135, 0.15, 0.86);\n\nexport const easeInQuint = bezier(0.755, 0.05, 0.855, 0.06);\nexport const easeOutQuint = bezier(0.23, 1, 0.32, 1);\nexport const easeInOutQuint = bezier(0.86, 0, 0.07, 1);\n\nexport const easeInExpo = bezier(0.95, 0.05, 0.795, 0.035);\nexport const easeOutExpo = bezier(0.19, 1, 0.22, 1);\nexport const easeInOutExpo = bezier(1, 0, 0, 1);\n\nexport const easeInBack = bezier(0.6, -0.28, 0.735, 0.045);\nexport const easeOutBack = bezier(0.175, 0.885, 0.32, 1.275);\nexport const easeInOutBack = bezier(0.68, -0.55, 0.265, 1.55);\n","import _ from \"lodash\";\n\nconst actions = store => ({\n  updateColor: (state, color) => ({\n    colors: {\n      ...state.colors,\n      ..._.keyBy([color], \"id\")\n    }\n  }),\n  removeColor: (state, color) => ({\n    colors: _.filter(state.colors, existingColor => {\n      return existingColor.id !== color.id;\n    })\n  }),\n  replaceColors: (state, colors) => ({ colors })\n});\n\nexport default actions;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nclass Palettes extends Component {\n  render() {\n    return (\n      <div\n        className=\"swatch-area\"\n        style={{ display: \"flex\", flexDirection: \"row\" }}\n      >\n        {_.map(_.orderBy(this.props.colors, \"id\", \"desc\"), (color, index) => {\n          // Generate a color palette from each source color\n          return (\n            <div key={index} className=\"swatch-list\">\n              {_.map(color.swatches, (swatchColor, index) => {\n                return <Swatch key={index} index={index} color={swatchColor} />;\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nPalettes.propTypes = {\n  colors: PropTypes.object.isRequired\n};\n\nexport default Palettes;\n\nconst Swatch = props => {\n  const styles = {\n    color: props.color.displayColor,\n    backgroundColor: props.color.hex\n  };\n  const contrastBlackStyles = {\n    color: \"black\"\n  };\n  const contrastWhiteStyles = {\n    color: \"white\"\n  };\n\n  const SourceMarker = () => {\n    if (props.color.sourceColorIndex === props.index) {\n      return <span>*</span>;\n    } else {\n      return null;\n    }\n  };\n  return (\n    <div className=\"swatch\" style={styles}>\n      <div className=\"swatch__info\">\n        <span className=\"swatch__info-segment\">{props.color.hex}</span>\n        <span className=\"swatch__info-segment\" style={contrastBlackStyles}>\n          {props.color.contrastBlack}b\n        </span>\n        <span className=\"swatch__info-segment\" style={contrastWhiteStyles}>\n          {props.color.contrastWhite}w\n        </span>\n        <SourceMarker />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport reactCSS from \"reactcss\";\nimport chroma from \"chroma-js\";\n\nclass ColorPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayColorPicker: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  }\n\n  handleClose() {\n    this.setState({ displayColorPicker: false });\n  }\n\n  handleChange(color) {\n    this.props.addOrUpdateColor({ hex: color.hex, id: this.props.color.id });\n    this.setState({ displayColorPicker: false });\n  }\n\n  render() {\n    const color = chroma(this.props.color.hex);\n    const styles = reactCSS({\n      default: {\n        color: {\n          width: \"36px\",\n          height: \"14px\",\n          borderRadius: \"2px\",\n          background: `rgb(${color.rgb()[0]}, ${color.rgb()[1]}, ${\n            color.rgb()[2]\n          })`\n        },\n        swatch: {\n          padding: \"5px\",\n          background: \"#fff\",\n          borderRadius: \"1px\",\n          boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\n          display: \"inline-block\",\n          cursor: \"pointer\"\n        },\n        popover: {\n          position: \"absolute\",\n          zIndex: \"2\"\n        },\n        cover: {\n          position: \"fixed\",\n          top: \"0px\",\n          right: \"0px\",\n          bottom: \"0px\",\n          left: \"0px\"\n        }\n      }\n    });\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={this.handleClick}>\n          <div style={styles.color} />\n        </div>\n        {this.state.displayColorPicker ? (\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={this.handleClose} />\n            <SketchPicker\n              color={this.state.color}\n              onChange={this.handleChange}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport chroma from \"chroma-js\";\n\nclass ColorFinder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comparison: null,\n      search: \"\",\n      result: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ search: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    // get some info about the color that was submitted\n    let submittedColor = chroma(this.state.search);\n    let submittedContrastWhite = chroma\n      .contrast(submittedColor.hex(), \"white\")\n      .toFixed(2);\n    let submittedContrastBlack = chroma\n      .contrast(submittedColor.hex(), \"black\")\n      .toFixed(2);\n    let submittedDisplayColor = \"\";\n    if (submittedContrastWhite >= 4.5) {\n      submittedDisplayColor = \"white\";\n    } else {\n      submittedDisplayColor = \"black\";\n    }\n    let comparison = {\n      hex: submittedColor.hex(),\n      contrastWhite: submittedContrastWhite,\n      contrastBlack: submittedContrastBlack,\n      displayColor: submittedDisplayColor\n    };\n    // Get all swatches from all palettes\n    let allSwatches = [];\n    _.each(this.props.colors, color => {\n      allSwatches.push(...color.swatches);\n    });\n    console.log(allSwatches);\n    // get the swatch with the color closest to what was submitted\n    let colorsWithDistance = _.map(allSwatches, color => {\n      return {\n        ...color,\n        colorDistance: chroma.distance(color.hex, comparison.hex)\n      };\n    });\n    let closestColor = _.first(\n      _.orderBy(colorsWithDistance, \"colorDistance\", \"asc\")\n    );\n    console.log(colorsWithDistance);\n    console.log(closestColor);\n    this.setState({ comparison, result: closestColor, search: comparison.hex });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"search\"\n            value={this.state.search}\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">Find a color</button>\n        </form>\n        {this.state.result && (\n          <div>\n            <p style={{ lineHeight: 1.5 }}>You searched for: </p>\n            <p>\n              <span\n                style={{\n                  background: this.state.comparison.hex,\n                  color: this.state.comparison.displayColor,\n                  padding: \"0 .5rem\",\n                  borderRadius: \".5rem\"\n                }}\n              >\n                {this.state.comparison.hex}\n              </span>\n            </p>\n            <p>The closest color is:</p>\n            <p>\n              <span\n                style={{\n                  background: this.state.result.hex,\n                  color: this.state.result.displayColor,\n                  padding: \"0 .5rem\",\n                  borderRadius: \".5rem\"\n                }}\n              >\n                {this.state.result.hex}\n              </span>{\" \"}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nColorFinder.propTypes = {\n  colors: PropTypes.object.isRequired\n};\n\nexport default ColorFinder;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nimport ColorPicker from \"./ColorPicker\";\nimport ColorFinder from \"./ColorFinder\";\n\nclass Sidebar extends Component {\n  render() {\n    const rowStyles = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      padding: \".25rem 0\"\n    };\n\n    return (\n      <div className=\"sidebar\">\n        <button onClick={this.props.addOrUpdateColor}>Add column</button>\n        {_.map(_.orderBy(this.props.colors, \"id\", \"desc\"), (color, index) => {\n          return (\n            <div key={index} style={rowStyles}>\n              <ColorPicker\n                color={color}\n                addOrUpdateColor={this.props.addOrUpdateColor}\n              />\n              <div style={{ flex: 1, padding: \"0 .5rem\" }}>{color.hex}</div>\n              <div>\n                <button\n                  onClick={() => {\n                    this.props.removeColumn(color);\n                  }}\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          );\n        })}\n        <div>\n          <ColorFinder colors={this.props.colors} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  addOrUpdateColor: PropTypes.func.isRequired,\n  colors: PropTypes.object.isRequired,\n  removeColumn: PropTypes.func.isRequired\n};\n\nexport default Sidebar;\n","import React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport _ from \"lodash\";\nimport { connect } from \"redux-zero/react\";\n\nimport generateColors from \"./generateColors\";\nimport actions from \"./actions\";\nimport Palettes from \"./Palettes\";\nimport Sidebar from \"./Sidebar\";\n\n// Get colors from query params when this component mounts\nconst getColorParams = props => {\n  // Get query params\n  let params = queryString.parse(props.location.search);\n  let colorQueries = [];\n  if (params.color) {\n    if (!Array.isArray(params.color)) {\n      colorQueries.push(params.color);\n    } else {\n      colorQueries = params.color;\n    }\n  }\n  // Return an array of color objects\n  return _.map(colorQueries, (color, index) => {\n    return {\n      hex: color,\n      id: index\n    };\n  });\n};\n\n// Merge any supplied color object {hex, id}, return a list set ordered by 'id'\nconst getMergedColors = (colorObj, colors) => {\n  let mergedColors = {\n    ...colors,\n    ..._.keyBy([colorObj], \"id\")\n  };\n  let colorsArray = _.map(_.orderBy(mergedColors, \"id\"), color => {\n    return color.hex;\n  });\n  return colorsArray;\n};\n\n// Build a new query string\nconst getQueryString = colors => {\n  return queryString.stringify({\n    color: _.map(_.orderBy(colors, \"id\"), color => {\n      return color;\n    })\n  });\n};\n\nclass Colors extends Component {\n  constructor(props) {\n    super(props);\n    this.addOrUpdateColor = this.addOrUpdateColor.bind(this);\n    this.removeColumn = this.removeColumn.bind(this);\n  }\n\n  componentDidMount() {\n    // When this component mounts, get colors from the query params\n    let queryColors = getColorParams(this.props);\n    let colorPalettes = _.keyBy(\n      _.map(queryColors, color => {\n        let swatches = generateColors(color.hex);\n        return {\n          ...color,\n          sourceColorIndex: swatches[0].sourceColorIndex,\n          swatches\n        };\n      }),\n      \"id\"\n    );\n    this.props.replaceColors(colorPalettes);\n  }\n\n  addOrUpdateColor(colorObj) {\n    // If a color was supplied, use it. Otherwise fall back to new color\n    console.log(this.props.colors);\n    let newColorId = this.props.colors.length;\n    console.log(newColorId);\n    let newColorObj = colorObj.hex\n      ? colorObj\n      : { hex: \"#666666\", id: Object.keys(this.props.colors).length };\n\n    // Merge the new color and add it to the store and the query params\n    let mergedColors = getMergedColors(newColorObj, this.props.colors);\n    this.props.updateColor(newColorObj);\n    this.props.history.push(`?${getQueryString(mergedColors)}`);\n  }\n\n  removeColumn(color) {\n    let culledColors = _.map(\n      _.filter(this.props.colors, existingColor => {\n        return existingColor.id !== color.id;\n      }),\n      color => {\n        return color.hex;\n      }\n    );\n    this.props.removeColor(color);\n    this.props.history.push(`?${getQueryString(culledColors)}`);\n  }\n\n  render() {\n    return (\n      <div className=\"lumicolors-tool\">\n        <Sidebar\n          addOrUpdateColor={this.addOrUpdateColor}\n          colors={this.props.colors}\n          removeColumn={this.removeColumn}\n        />\n        <Palettes colors={this.props.colors} />\n      </div>\n    );\n  }\n}\n\nconst mapToProps = ({ colors }) => ({ colors });\n\nexport default connect(\n  mapToProps,\n  actions\n)(Colors);\n","import chroma from \"chroma-js\";\nimport _ from \"lodash\";\n\nimport * as Curves from \"./curves.js\";\n\nexport default function(sourceColor) {\n  // Bail out if there isn't really a source color provided\n  if (!sourceColor) return true;\n\n  // Configuration\n  let steps = 12; // Number of color swatches in each palette\n  let contrastRange = [1.1, 19]; // We'll be generating palettes based on text contrast\n\n  // build a distribution of contrast values we will target\n  let contrastDistribution = _.times(steps, index => {\n    let curveStep = Curves[\"easeInOutQuint\"](index / (steps - 1));\n    let range = contrastRange[1] - contrastRange[0];\n    return curveStep * range + contrastRange[0];\n  });\n\n  // Figure out the closest contrast value for source color and get the index\n  let sourceContrast = chroma.contrast(sourceColor, \"white\").toFixed(2);\n  let closestContrastValue = _.first(\n    _.sortBy(contrastDistribution, contrastStep => {\n      return Math.abs(contrastStep - sourceContrast);\n    })\n  );\n\n  // Return the index of the closest matching value\n  let sourceColorIndex = _.findIndex(contrastDistribution, o => {\n    return o === closestContrastValue;\n  });\n\n  // Confine a number to a range from 0 to 1\n  let confine = number => {\n    return Math.max(Math.min(number, 1), 0);\n  };\n\n  // Build a wider set of colors to choose from\n  let expandedColors = [];\n  let hueIncrement = 0.15; // rate of hue change\n  let satIncrement = 0.008; // rate of saturation change\n  let lumIncrement = 0.015; // rate of luminosity change\n  _.times(steps * 10, index => {\n    let sourceColorHSV = chroma(sourceColor).hsv();\n    let lighterHue = sourceColorHSV[0] + hueIncrement * index;\n    let lighterSat = confine(sourceColorHSV[1] - satIncrement * index);\n    let lighterLum = confine(sourceColorHSV[2] + lumIncrement * index);\n    let darkerHue = sourceColorHSV[0] - hueIncrement * 2 * index;\n    let darkerSat = confine(sourceColorHSV[1] + satIncrement * 4 * index);\n    let darkerLum = confine(sourceColorHSV[2] - lumIncrement * index);\n    let lighterColor = chroma(\n      chroma.hsv(lighterHue, lighterSat, lighterLum)\n    ).hex();\n    let darkerColor = chroma(chroma.hsv(darkerHue, darkerSat, darkerLum)).hex();\n    expandedColors.push(darkerColor, lighterColor);\n  });\n\n  // Select a color for the light end of our palette based on black text contrast\n  let lightestColor = _.first(\n    _.sortBy(expandedColors, color => {\n      let colorContrast = chroma.contrast(color, \"black\").toFixed(2);\n      return Math.abs(colorContrast - 19);\n    })\n  );\n\n  // Select a color for the dark end of our palette based on white text contrast\n  let darkestColor = _.first(\n    _.sortBy(expandedColors, color => {\n      let colorContrast = chroma.contrast(color, \"white\").toFixed(2);\n      return Math.abs(colorContrast - 18);\n    })\n  );\n\n  // Build a color palette from the lightest, darkest and source colors\n  let colorGradient = chroma\n    .scale([\n      chroma(lightestColor).hex(),\n      sourceColor,\n      chroma(darkestColor).hex()\n    ])\n    .domain([0, sourceColorIndex / steps, 1])\n    .colors(steps);\n\n  // Assemble our final swatch list for this palette\n  let swatchList = _.map(colorGradient, (color, index) => {\n    if (index === sourceColorIndex) color = sourceColor;\n    const contrastWhite = chroma.contrast(color, \"white\").toFixed(2);\n    const contrastBlack = chroma.contrast(color, \"black\").toFixed(2);\n    var displayColor = \"\";\n    if (contrastWhite >= 4.5) {\n      displayColor = \"white\";\n    } else {\n      displayColor = \"black\";\n    }\n    return {\n      hex: chroma(color).hex(),\n      hue: chroma(color).hsv()[0],\n      sat: chroma(color).hsv()[1],\n      lum: chroma(color).hsv()[2],\n      hsv: chroma(color).hsv(),\n      hsl: chroma(color).hsl(),\n      rgb: chroma(color).rgb(),\n      contrastBlack: contrastBlack,\n      contrastWhite: contrastWhite,\n      displayColor: displayColor,\n      sourceColorIndex,\n      steps\n    };\n  });\n\n  return swatchList;\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"redux-zero/react\";\n\nimport store from \"./store\";\nimport Colors from \"./Colors\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Route path=\"/\" component={Colors} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}