{"version":3,"sources":["store.js","curves.js","generateColors.js","actions.js","Palettes.js","ColorPicker.js","ColorFinder.js","Sidebar.js","Colors.js","App.js","serviceWorker.js","index.js"],"names":["store","createStore","colors","0","id","hex","easeInOutQuint","bezier","generateColors","sourceColor","contrastRange","contrastDistribution","_","times","index","Curves","sourceContrast","chroma","contrast","toFixed","closestContrastValue","first","sortBy","contrastStep","Math","abs","sourceColorIndex","findIndex","o","confine","number","max","min","expandedColors","steps","sourceColorHSV","hsv","lighterHue","lighterSat","lighterLum","darkerHue","hueIncrement","darkerSat","satIncrement","darkerLum","lighterColor","darkerColor","push","lightestColor","color","colorContrast","darkestColor","colorGradient","scale","domain","map","contrastWhite","contrastBlack","displayColor","hue","sat","lum","hsl","rgb","actions","updateColor","state","Object","objectSpread","keyBy","removeColor","filter","existingColor","replaceColors","Palettes","react_default","a","createElement","className","style","display","flexDirection","orderBy","this","props","key","swatches","swatchColor","Palettes_Swatch","Component","Swatch","styles","backgroundColor","ColorPicker","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","displayColorPicker","handleClick","bind","assertThisInitialized","handleClose","handleChange","setState","addOrUpdateColor","reactCSS","default","width","height","borderRadius","background","concat","swatch","padding","boxShadow","cursor","popover","position","zIndex","cover","top","right","bottom","left","onClick","lib","onChange","React","ColorFinder","comparison","search","result","handleSubmit","e","target","value","preventDefault","submittedColor","submittedContrastWhite","submittedContrastBlack","submittedDisplayColor","allSwatches","each","apply","toConsumableArray","console","log","colorsWithDistance","colorDistance","distance","closestColor","onSubmit","type","name","lineHeight","Sidebar","rowStyles","alignItems","src_ColorPicker","flex","removeColumn","src_ColorFinder","getQueryString","queryString","stringify","Colors","queryColors","params","parse","location","colorQueries","Array","isArray","getColorParams","colorPalettes","colorObj","newColorId","length","newColorObj","keys","mergedColors","getMergedColors","history","culledColors","src_Sidebar","src_Palettes","connect","_ref","App","redux_zero_react","BrowserRouter","Route","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.171f01bd.chunk.js","sourcesContent":["import createStore from \"redux-zero\";\n\nconst initialState = {\n  colors: {\n    0: {\n      id: 0,\n      hex: \"#04aade\"\n    }\n  }\n};\nconst store = createStore(initialState);\n\nexport default store;\n","import bezier from \"bezier-easing\";\n\nexport const linear = bezier(0.5, 0.5, 0.5, 0.5);\n\nexport const easeInCubic = bezier(0.55, 0.055, 0.675, 0.19);\nexport const easeOutCubic = bezier(0.215, 0.61, 0.355, 1);\nexport const easeInOutCubic = bezier(0.645, 0.045, 0.355, 1);\n\nexport const easeInSine = bezier(0.47, 0, 0.745, 0.715);\nexport const easeOutSine = bezier(0.39, 0.575, 0.565, 1);\nexport const easeInOutSine = bezier(0.445, 0.05, 0.55, 0.95);\n\nexport const easeInQuad = bezier(0.55, 0.085, 0.68, 0.53);\nexport const easeOutQuad = bezier(0.25, 0.46, 0.45, 0.94);\nexport const easeInOutQuad = bezier(0.455, 0.03, 0.515, 0.955);\n\nexport const easeInQuart = bezier(0.895, 0.03, 0.685, 0.22);\nexport const easeOutQuart = bezier(0.165, 0.84, 0.44, 1);\nexport const easeInOutQuart = bezier(0.77, 0, 0.175, 1);\n\nexport const easeInCirc = bezier(0.6, 0.04, 0.98, 0.335);\nexport const easeOutCirc = bezier(0.075, 0.82, 0.165, 1);\nexport const easeInOutCirc = bezier(0.785, 0.135, 0.15, 0.86);\n\nexport const easeInQuint = bezier(0.755, 0.05, 0.855, 0.06);\nexport const easeOutQuint = bezier(0.23, 1, 0.32, 1);\nexport const easeInOutQuint = bezier(0.86, 0, 0.07, 1);\n\nexport const easeInExpo = bezier(0.95, 0.05, 0.795, 0.035);\nexport const easeOutExpo = bezier(0.19, 1, 0.22, 1);\nexport const easeInOutExpo = bezier(1, 0, 0, 1);\n\nexport const easeInBack = bezier(0.6, -0.28, 0.735, 0.045);\nexport const easeOutBack = bezier(0.175, 0.885, 0.32, 1.275);\nexport const easeInOutBack = bezier(0.68, -0.55, 0.265, 1.55);\n","import chroma from \"chroma-js\";\nimport _ from \"lodash\";\n\nimport * as Curves from \"./curves.js\";\n\nexport default function(sourceColor) {\n  // Bail out if there isn't really a source color provided\n  if (!sourceColor) return true;\n\n  // Configuration\n  let steps = 12; // Number of color swatches in each palette\n  let contrastRange = [1.1, 19]; // We'll be generating palettes based on text contrast\n\n  // build a distribution of contrast values we will target\n  let contrastDistribution = _.times(steps, index => {\n    let curveStep = Curves[\"easeInOutQuint\"](index / (steps - 1));\n    let range = contrastRange[1] - contrastRange[0];\n    return curveStep * range + contrastRange[0];\n  });\n\n  // Figure out the closest contrast value for source color and get the index\n  let sourceContrast = chroma.contrast(sourceColor, \"white\").toFixed(2);\n  let closestContrastValue = _.first(\n    _.sortBy(contrastDistribution, contrastStep => {\n      return Math.abs(contrastStep - sourceContrast);\n    })\n  );\n\n  // Return the index of the closest matching value\n  let sourceColorIndex = _.findIndex(contrastDistribution, o => {\n    return o === closestContrastValue;\n  });\n\n  // Confine a number to a range from 0 to 1\n  let confine = number => {\n    return Math.max(Math.min(number, 1), 0);\n  };\n\n  // Build a wider set of colors to choose from\n  let expandedColors = [];\n  let hueIncrement = 0.15; // rate of hue change\n  let satIncrement = 0.008; // rate of saturation change\n  let lumIncrement = 0.015; // rate of luminosity change\n  _.times(steps * 10, index => {\n    let sourceColorHSV = chroma(sourceColor).hsv();\n    let lighterHue = sourceColorHSV[0] + hueIncrement * index;\n    let lighterSat = confine(sourceColorHSV[1] - satIncrement * index);\n    let lighterLum = confine(sourceColorHSV[2] + lumIncrement * index);\n    let darkerHue = sourceColorHSV[0] - hueIncrement * 2 * index;\n    let darkerSat = confine(sourceColorHSV[1] + satIncrement * 4 * index);\n    let darkerLum = confine(sourceColorHSV[2] - lumIncrement * index);\n    let lighterColor = chroma(\n      chroma.hsv(lighterHue, lighterSat, lighterLum)\n    ).hex();\n    let darkerColor = chroma(chroma.hsv(darkerHue, darkerSat, darkerLum)).hex();\n    expandedColors.push(darkerColor, lighterColor);\n  });\n\n  // Select a color for the light end of our palette based on black text contrast\n  let lightestColor = _.first(\n    _.sortBy(expandedColors, color => {\n      let colorContrast = chroma.contrast(color, \"black\").toFixed(2);\n      return Math.abs(colorContrast - 19);\n    })\n  );\n\n  // Select a color for the dark end of our palette based on white text contrast\n  let darkestColor = _.first(\n    _.sortBy(expandedColors, color => {\n      let colorContrast = chroma.contrast(color, \"white\").toFixed(2);\n      return Math.abs(colorContrast - 18);\n    })\n  );\n\n  // Build a color palette from the lightest, darkest and source colors\n  let colorGradient = chroma\n    .scale([\n      chroma(lightestColor).hex(),\n      sourceColor,\n      chroma(darkestColor).hex()\n    ])\n    .domain([0, sourceColorIndex / steps, 1])\n    .colors(steps);\n\n  // Assemble our final swatch list for this palette\n  let swatchList = _.map(colorGradient, (color, index) => {\n    if (index === sourceColorIndex) color = sourceColor;\n    const contrastWhite = chroma.contrast(color, \"white\").toFixed(2);\n    const contrastBlack = chroma.contrast(color, \"black\").toFixed(2);\n    var displayColor = \"\";\n    if (contrastWhite >= 4.5) {\n      displayColor = \"white\";\n    } else {\n      displayColor = \"black\";\n    }\n    return {\n      hex: chroma(color).hex(),\n      hue: chroma(color).hsv()[0],\n      sat: chroma(color).hsv()[1],\n      lum: chroma(color).hsv()[2],\n      hsv: chroma(color).hsv(),\n      hsl: chroma(color).hsl(),\n      rgb: chroma(color).rgb(),\n      contrastBlack: contrastBlack,\n      contrastWhite: contrastWhite,\n      displayColor: displayColor,\n      sourceColorIndex,\n      steps\n    };\n  });\n\n  return swatchList;\n}\n","import _ from \"lodash\";\n\nconst actions = store => ({\n  updateColor: (state, color) => ({\n    colors: {\n      ...state.colors,\n      ..._.keyBy([color], \"id\")\n    }\n  }),\n  removeColor: (state, color) => ({\n    colors: _.filter(state.colors, existingColor => {\n      return existingColor.id !== color.id;\n    })\n  }),\n  replaceColors: (state, colors) => ({ colors })\n});\n\nexport default actions;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nclass Palettes extends Component {\n  render() {\n    return (\n      <div\n        className=\"swatch-area\"\n        style={{ display: \"flex\", flexDirection: \"row\" }}\n      >\n        {_.map(_.orderBy(this.props.colors, \"id\", \"desc\"), (color, index) => {\n          // Generate a color palette from each source color\n          return (\n            <div key={index} className=\"swatch-list\">\n              {_.map(color.swatches, (swatchColor, index) => {\n                return <Swatch key={index} index={index} color={swatchColor} />;\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nPalettes.propTypes = {\n  colors: PropTypes.object.isRequired\n};\n\nexport default Palettes;\n\nconst Swatch = props => {\n  const styles = {\n    color: props.color.displayColor,\n    backgroundColor: props.color.hex\n  };\n  const contrastBlackStyles = {\n    color: \"black\"\n  };\n  const contrastWhiteStyles = {\n    color: \"white\"\n  };\n\n  const SourceMarker = () => {\n    if (props.color.sourceColorIndex === props.index) {\n      return <span>*</span>;\n    } else {\n      return null;\n    }\n  };\n  return (\n    <div className=\"swatch\" style={styles}>\n      <div className=\"swatch__info\">\n        <span className=\"swatch__info-segment\">{props.color.hex}</span>\n        <span className=\"swatch__info-segment\" style={contrastBlackStyles}>\n          {props.color.contrastBlack}b\n        </span>\n        <span className=\"swatch__info-segment\" style={contrastWhiteStyles}>\n          {props.color.contrastWhite}w\n        </span>\n        <SourceMarker />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { CompactPicker } from \"react-color\";\nimport reactCSS from \"reactcss\";\nimport chroma from \"chroma-js\";\n\nclass ColorPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayColorPicker: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  }\n\n  handleClose() {\n    this.setState({ displayColorPicker: false });\n  }\n\n  handleChange(color) {\n    this.props.addOrUpdateColor({ hex: color.hex, id: this.props.color.id });\n    this.setState({ displayColorPicker: false });\n  }\n\n  render() {\n    const color = chroma(this.props.color.hex);\n    const styles = reactCSS({\n      default: {\n        color: {\n          width: \"36px\",\n          height: \"14px\",\n          borderRadius: \"2px\",\n          background: `rgb(${color.rgb()[0]}, ${color.rgb()[1]}, ${\n            color.rgb()[2]\n          })`\n        },\n        swatch: {\n          padding: \"5px\",\n          background: \"#fff\",\n          borderRadius: \"1px\",\n          boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\n          display: \"inline-block\",\n          cursor: \"pointer\"\n        },\n        popover: {\n          position: \"absolute\",\n          zIndex: \"2\"\n        },\n        cover: {\n          position: \"fixed\",\n          top: \"0px\",\n          right: \"0px\",\n          bottom: \"0px\",\n          left: \"0px\"\n        }\n      }\n    });\n\n    return (\n      <div>\n        <div style={styles.swatch} onClick={this.handleClick}>\n          <div style={styles.color} />\n        </div>\n        {this.state.displayColorPicker ? (\n          <div style={styles.popover}>\n            <div style={styles.cover} onClick={this.handleClose} />\n            <CompactPicker\n              color={this.props.color.hex}\n              onChange={this.handleChange}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport chroma from \"chroma-js\";\n\nclass ColorFinder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comparison: null,\n      search: \"\",\n      result: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ search: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    // get some info about the color that was submitted\n    let submittedColor = chroma(this.state.search);\n    let submittedContrastWhite = chroma\n      .contrast(submittedColor.hex(), \"white\")\n      .toFixed(2);\n    let submittedContrastBlack = chroma\n      .contrast(submittedColor.hex(), \"black\")\n      .toFixed(2);\n    let submittedDisplayColor = \"\";\n    if (submittedContrastWhite >= 4.5) {\n      submittedDisplayColor = \"white\";\n    } else {\n      submittedDisplayColor = \"black\";\n    }\n    let comparison = {\n      hex: submittedColor.hex(),\n      contrastWhite: submittedContrastWhite,\n      contrastBlack: submittedContrastBlack,\n      displayColor: submittedDisplayColor\n    };\n    // Get all swatches from all palettes\n    let allSwatches = [];\n    _.each(this.props.colors, color => {\n      allSwatches.push(...color.swatches);\n    });\n    console.log(allSwatches);\n    // get the swatch with the color closest to what was submitted\n    let colorsWithDistance = _.map(allSwatches, color => {\n      return {\n        ...color,\n        colorDistance: chroma.distance(color.hex, comparison.hex)\n      };\n    });\n    let closestColor = _.first(\n      _.orderBy(colorsWithDistance, \"colorDistance\", \"asc\")\n    );\n    console.log(colorsWithDistance);\n    console.log(closestColor);\n    this.setState({ comparison, result: closestColor, search: comparison.hex });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"search\"\n            value={this.state.search}\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">Find a color</button>\n        </form>\n        {this.state.result && (\n          <div>\n            <p style={{ lineHeight: 1.5 }}>You searched for: </p>\n            <p>\n              <span\n                style={{\n                  background: this.state.comparison.hex,\n                  color: this.state.comparison.displayColor,\n                  padding: \"0 .5rem\",\n                  borderRadius: \".5rem\"\n                }}\n              >\n                {this.state.comparison.hex}\n              </span>\n            </p>\n            <p>The closest color is:</p>\n            <p>\n              <span\n                style={{\n                  background: this.state.result.hex,\n                  color: this.state.result.displayColor,\n                  padding: \"0 .5rem\",\n                  borderRadius: \".5rem\"\n                }}\n              >\n                {this.state.result.hex}\n              </span>{\" \"}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nColorFinder.propTypes = {\n  colors: PropTypes.object.isRequired\n};\n\nexport default ColorFinder;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nimport ColorPicker from \"./ColorPicker\";\nimport ColorFinder from \"./ColorFinder\";\n\nclass Sidebar extends Component {\n  render() {\n    const rowStyles = {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      padding: \".25rem 0\"\n    };\n\n    return (\n      <div className=\"sidebar\">\n        <button onClick={this.props.addOrUpdateColor}>Add column</button>\n        {_.map(_.orderBy(this.props.colors, \"id\", \"desc\"), (color, index) => {\n          return (\n            <div key={index} style={rowStyles}>\n              <ColorPicker\n                color={color}\n                addOrUpdateColor={this.props.addOrUpdateColor}\n              />\n              <div style={{ flex: 1, padding: \"0 .5rem\" }}>{color.hex}</div>\n              <div>\n                <button\n                  onClick={() => {\n                    this.props.removeColumn(color);\n                  }}\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          );\n        })}\n        <div>\n          <ColorFinder colors={this.props.colors} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  addOrUpdateColor: PropTypes.func.isRequired,\n  colors: PropTypes.object.isRequired,\n  removeColumn: PropTypes.func.isRequired\n};\n\nexport default Sidebar;\n","import React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport _ from \"lodash\";\nimport { connect } from \"redux-zero/react\";\n\nimport generateColors from \"./generateColors\";\nimport actions from \"./actions\";\nimport Palettes from \"./Palettes\";\nimport Sidebar from \"./Sidebar\";\n\n// Get colors from query params when this component mounts\nconst getColorParams = props => {\n  // Get query params\n  let params = queryString.parse(props.location.search);\n  let colorQueries = [];\n  if (params.color) {\n    if (!Array.isArray(params.color)) {\n      colorQueries.push(params.color);\n    } else {\n      colorQueries = params.color;\n    }\n  }\n  // Return an array of color objects\n  return _.map(colorQueries, (color, index) => {\n    return {\n      hex: color,\n      id: index\n    };\n  });\n};\n\n// Merge any supplied color object {hex, id}, return a list set ordered by 'id'\nconst getMergedColors = (colorObj, colors) => {\n  let mergedColors = {\n    ...colors,\n    ..._.keyBy([colorObj], \"id\")\n  };\n  let colorsArray = _.map(_.orderBy(mergedColors, \"id\"), color => {\n    return color.hex;\n  });\n  return colorsArray;\n};\n\n// Build a new query string\nconst getQueryString = colors => {\n  return queryString.stringify({\n    color: _.map(_.orderBy(colors, \"id\"), color => {\n      return color;\n    })\n  });\n};\n\nclass Colors extends Component {\n  constructor(props) {\n    super(props);\n    this.addOrUpdateColor = this.addOrUpdateColor.bind(this);\n    this.removeColumn = this.removeColumn.bind(this);\n  }\n\n  componentDidMount() {\n    // When this component mounts, get colors from the query params\n    let queryColors = getColorParams(this.props);\n    let colorPalettes = _.keyBy(\n      _.map(queryColors, color => {\n        let swatches = generateColors(color.hex);\n        return {\n          ...color,\n          sourceColorIndex: swatches[0].sourceColorIndex,\n          swatches\n        };\n      }),\n      \"id\"\n    );\n    this.props.replaceColors(colorPalettes);\n  }\n\n  addOrUpdateColor(colorObj) {\n    // If a color was supplied, use it. Otherwise fall back to new color\n    console.log(this.props.colors);\n    let newColorId = this.props.colors.length;\n    console.log(newColorId);\n    let newColorObj = colorObj.hex\n      ? {\n          ...colorObj,\n          swatches: generateColors(colorObj.hex)\n        }\n      : {\n          hex: \"#666666\",\n          id: Object.keys(this.props.colors).length,\n          swatches: generateColors(\"#666666\")\n        };\n\n    // Merge the new color and add it to the store and the query params\n    let mergedColors = getMergedColors(newColorObj, this.props.colors);\n    this.props.updateColor(newColorObj);\n    this.props.history.push(`?${getQueryString(mergedColors)}`);\n  }\n\n  removeColumn(color) {\n    let culledColors = _.map(\n      _.filter(this.props.colors, existingColor => {\n        return existingColor.id !== color.id;\n      }),\n      color => {\n        return color.hex;\n      }\n    );\n    this.props.removeColor(color);\n    this.props.history.push(`?${getQueryString(culledColors)}`);\n  }\n\n  render() {\n    return (\n      <div className=\"lumicolors-tool\">\n        <Sidebar\n          addOrUpdateColor={this.addOrUpdateColor}\n          colors={this.props.colors}\n          removeColumn={this.removeColumn}\n        />\n        <Palettes colors={this.props.colors} />\n      </div>\n    );\n  }\n}\n\nconst mapToProps = ({ colors }) => ({ colors });\n\nexport default connect(\n  mapToProps,\n  actions\n)(Colors);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"redux-zero/react\";\n\nimport store from \"./store\";\nimport Colors from \"./Colors\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Route path=\"/\" component={Colors} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}